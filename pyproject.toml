[project]
name = "Locamind"
version = "0.1.0"
description = "Free online rental property management service for private landlords."
authors = [{ name = "Macktireh", email = "mack.abdisoubaneh@gmail.com" }]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }
dependencies = [
    "celery>=5.4.0",
    "django>=5.1.4",
    "django-cotton>=1.5.1",
    "django-countries>=7.6.1",
    "django-environ>=0.11.2",
    "django-phonenumber-field[phonenumberslite]>=8.0.0",
    "django-redis>=5.4.0",
    "flower>=2.0.1",
    "Pillow>=11.0.0",
    "psycopg[binary]>=3.2.3",
    "simplesocialauthlib>=0.2.2",
    "six>=1.17.0",
    "whitenoise>=6.8.2"
]

[dependency-groups]
dev = [
    "django-browser-reload>=1.17.0",
    "django-debug-toolbar>=4.4.6",
    "django-extensions>=3.2.3",
]
lint = [
    "djade>=1.3.2",
    "pre-commit>=4.0.1",
    "ruff>=0.8.3",
]
test = [
    "pytest-django>=4.9.0",
]

[tool.pdm]
distribution = false

[tool.pdm.scripts]
newapp = "python src/manage.py startapp"
makemigrations = "python src/manage.py makemigrations"
migrate = "python src/manage.py migrate"
dev = "python src/manage.py runserver localhost:8000"
test = "pytest"
shell = "python src/manage.py shell"
createsuperuser = "python src/manage.py createsuperuser --email=admin@example.com --first_name=Admin --last_name=AD"
collectstatic = "python src/manage.py collectstatic"
loaddata = "python src/manage.py loaddata"
dumpdata = "python src/manage.py dumpdata"
rufffix = "ruff check --fix"
ruffformat = "ruff format"
ruffcheck = "ruff check"
djade = "djade.EXE --target-version 5.1 templates/**/*.html"
exports = "pdm export -f requirements --without-hashes"
docker = "docker compose up --build"
mmm = { composite = ["makemigrations", "migrate"] }
ruff = { composite = ["ruffformat", "rufffix"] }


[tool.pytest.ini_options]
pythonpath = ["src"]
DJANGO_SETTINGS_MODULE = "config.settings.testing"
python_files = ["test*.py", "*test.py", "testing/python/*.py"]


[tool.ruff]
line-length = 120
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
